 React Code (TypeScript):

```typescript
import React, { useState } from 'react';

interface AddressFormProps {
  onSubmit: (address: Address) => void;
}

interface Address {
  apartmentNumber?: string;
  street: string;
  city: string;
  zip: string;
}

const AddressForm: React.FC<AddressFormProps> = ({ onSubmit }) => {
  const [address, setAddress] = useState<Address>({
    street: '',
    city: '',
    zip: '',
  });

  const handleChange = (
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    setAddress({
      ...address,
      [event.target.name]: event.target.value,
    });
  };

  const handleSubmit = (event: React.FormEvent) => {
    event.preventDefault();
    onSubmit(address);
  };

  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label htmlFor="apartmentNumber">Apartment Number</label>
        <input
          type="text"
          id="apartmentNumber"
          name="apartmentNumber"
          value={address.apartmentNumber || ''}
          onChange={handleChange}
        />
      </div>
      <div>
        <label htmlFor="street">Street</label>
        <input
          type="text"
          id="street"
          name="street"
          value={address.street}
          onChange={handleChange}
          required
        />
      </div>
      <div>
        <label htmlFor="city">City</label>
        <input
          type="text"
          id="city"
          name="city"
          value={address.city}
          onChange={handleChange}
          required
        />
      </div>
      <div>
        <label htmlFor="zip">ZIP</label>
        <input
          type="text"
          id="zip"
          name="zip"
          value={address.zip}
          onChange={handleChange}
          required
        />
      </div>
      <button type="submit">Submit</button>
    </form>
  );
};

export default AddressForm;

```

## JSON for UI/UX:

```json
{
  "type": "form",
  "fields": [
    {
      "label": "Apartment Number",
      "name": "apartmentNumber",
      "type": "text",
      "required": false
    },
    {
      "label": "Street",
      "name": "street",
      "type": "text",
      "required": true
    },
    {
      "label": "City",
      "name": "city",
      "type": "text",
      "required": true
    },
    {
      "label": "ZIP",
      "name": "zip",
      "type": "text",
      "required": true
    }
  ],
  "layout": "vertical",
  "submitLabel": "Submit"
}
```

